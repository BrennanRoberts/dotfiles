#!/usr/bin/env bash

# exit when any command fails
set -e

function command_exists {
  printf "Checking for $1 command... "
  if command -v "$1" >/dev/null 2>&1; then
    echo "Found"
    return 0
  else
    echo "Not found"
    return 1
  fi
}

function dir_exists {
  printf "Checking for $2 directory at $1... "
  if [ -d $1 ]; then
    echo "Found"
    return 0
  else
    echo "Not found"
    return 1
  fi
}

function install_xcode_tools {
  echo "Installing Xcode Tools"
  xcode-select --install || echo "Already installed"
}

function install_homebrew {
  echo "Installing Homebrew"
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
}

function install_homebrew_packages {
  echo "Installing Hombrew packages using brew bundle"
  brew bundle
}

function install_vundle {
  printf "Installing Vundle..."
	git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
  echo "Done"
}

function install_vundle_plugins {
  printf "Installing Vundle plugins..."
	vim +PluginInstall +qall
  echo "Done"
}

function set_mac_prefs {
  # Enable right-click
  defaults write com.apple.driver.AppleBluetoothMultitouch.mouse MouseButtonMode TwoButton

  # Enable full keyboard access for all controls (e.g. enable Tab in modal dialogs)
  defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

  # Enable three-finger drag
  defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerDrag -bool true
  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerDrag -bool true
}

install_xcode_tools
command_exists brew || install_homebrew
install_homebrew_packages
dir_exists ~/.vim/bundle/Vundle.vim vundle || install_vundle
install_vundle_plugins
set_mac_prefs
